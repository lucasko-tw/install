kind: ConfigMap
apiVersion: v1
metadata:
  name: elasticsearch-config
data:
  elasticsearch.yml: |
    cluster.name: "docker-cluster"
    network.host: 0.0.0.0
    xpack.license.self_generated.type: trial
    xpack.monitoring.collection.enabled: true
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: elasticsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      volumes:
        - name: config
          configMap:
            name: elasticsearch-config
            defaultMode: 420
#      initContainers:
#        - name: increase-vm-max-map
#          image: busybox
#          command:
#            - sysctl
#            - '-w'
#            - vm.max_map_count=262144
#          securityContext:
#            privileged: true
      containers:
        - name: elasticsearch
          image: 'docker.elastic.co/elasticsearch/elasticsearch:7.4.1'
          ports:
            - containerPort: 9200
              protocol: TCP
            - containerPort: 9300
              protocol: TCP
          env:
            - name: ES_JAVA_OPTS
              value: '-Xms512m -Xmx512m'
            - name: discovery.type
              value: single-node
          volumeMounts:
            - name: config
              mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
              subPath: elasticsearch.yml
---
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch
spec:
  ports:
    - name: elasticsearch
      protocol: TCP
      port: 9200
      targetPort: 9200
  selector:
    app: elasticsearch
  type: NodePort
  sessionAffinity: None
---
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd-logging
  namespace: default
  labels:
    k8s-app: fluentd-logging
    addonmanager.kubernetes.io/mode: Reconcile
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd-logging
  labels:
    k8s-app: fluentd-logging
    addonmanager.kubernetes.io/mode: Reconcile
rules:
  - apiGroups:
      - ""
    resources:
      - "namespaces"
      - "pods"
    verbs:
      - "get"
      - "watch"
      - "list"
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd-logging
  labels:
    k8s-app: fluentd-logging
    addonmanager.kubernetes.io/mode: Reconcile
subjects:
  - kind: ServiceAccount
    name: fluentd-logging
    namespace: default
    apiGroup: ""
roleRef:
  kind: ClusterRole
  name: fluentd-logging
  apiGroup: ""

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: default
  labels:
    k8s-app: fluentd-logging
    version: v1
spec:
  selector:
    matchLabels:
      k8s-app: fluentd-logging
      version: v1
  template:
    metadata:
      labels:
        k8s-app: fluentd-logging # This label will help group your daemonset pods
        version: v1
    spec:
      #tolerations:
      #  - key: node-role.kubernetes.io/master
      #    effect: NoSchedule # This will ensure fluentd collects master logs too
      serviceAccountName: fluentd-logging
      containers:
        - name: fluentd
          image: fluent/fluentd-kubernetes-daemonset:v1-debian-elasticsearch
          env:
            - name:  FLUENT_ELASTICSEARCH_HOST
              value: "elasticsearch" # Or the host of your elasticsearch server
            - name:  FLUENT_ELASTICSEARCH_PORT
              value: "9200" # The port that your elasticsearch API is exposed on
            - name: FLUENT_ELASTICSEARCH_SCHEME
              value: "http" # Either HTTP or HTTPS.
            #- name: FLUENT_ELASTICSEARCH_USER
            #  value: "elastic" # The username you've set up for elasticsearch
            #- name: FLUENT_ELASTICSEARCH_PASSWORD
            #  value: "changeme" # The password you've got. These are the defaults.
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
      terminationGracePeriodSeconds: 30
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers